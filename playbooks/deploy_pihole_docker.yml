---
- name: Deploy Pi-hole Docker Container Using Host's Unbound
  hosts: zelda
  become: true
  vars_files:
    - homelab_vault.yml
  vars:
    pihole_container_name: pihole
    pihole_image: pihole/pihole:latest
    pihole_volume: "/etc/pihole"
    dnsmasq_volume: "/etc/dnsmasq.d"
    internal_ip: "{{ ansible_default_ipv4.address }}"
    internal_domain: "{{ ansible_hostname }}"
    internal_netmask: "24"
    internal_ifname: "wlan0"
    ipv4_address_with_netmask: "{{ internal_ip }}/{{ internal_netmask }}"
    local_domain_name: "{{ internal_domain }}"
    dhcp_router: "{{ internal_ip }}"
    stevenblack_hosts_url: "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
    local_dns_records:
      - { name: "mahdilab.synology.me", ip: "192.168.2.166" }
      - { name: "home.mahdilab.synology.me", ip: "192.168.2.166" }
      - { name: "jellyfin.mahdilab.synology.me", ip: "192.168.2.166" }
      - { name: "pihole.mahdilab.synology.me", ip: "192.168.2.166" }
      - { name: "prowlarr.mahdilab.synology.me", ip: "192.168.2.166" }
      - { name: "transmission.mahdilab.synology.me", ip: "192.168.2.166" }
      - { name: "mijnmodem.kpn", ip: "192.168.2.254" }
    rate_limit: "2000/60"
    dns_forward_max: "500"
    container_ports:
      - "80:80"
      - "443:443"
      - "53:53"
      - "53:53/udp"
    timezone: "Europe/Amsterdam"
    # Host's Unbound DNS
    unbound_host_ip: "{{ ansible_default_ipv4.address }}"
    unbound_port: 5335

  tasks:
    - name: Ensure Pi-hole configuration directory exists
      file:
        path: "{{ pihole_volume }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Ensure dnsmasq configuration directory exists
      file:
        path: "{{ dnsmasq_volume }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Configure Pi-hole environment variables
      template:
        src: templates/pihole.setupvars.j2
        dest: "{{ pihole_volume }}/pihole.env"
        owner: root
        group: root
        mode: '0644'

    - name: Configure dnsmasq settings
      template:
        src: templates/dnsmasq.extras.j2
        dest: "{{ dnsmasq_volume }}/10-custom.conf"
        owner: root
        group: root
        mode: '0644'

    - name: Configure Pi-hole to use host's Unbound as DNS server
      lineinfile:
        path: "{{ pihole_volume }}/pihole.env"
        regexp: '^DNS1='
        line: "DNS1={{ unbound_host_ip }}#{{ unbound_port }}"
      notify: Restart Pi-hole

    - name: Deploy Pi-hole container
      community.docker.docker_container:
        name: "{{ pihole_container_name }}"
        image: "{{ pihole_image }}"
        state: started
        restart_policy: always
        hostname: "{{ internal_domain }}"
        ports: "{{ container_ports }}"
        env_file: "{{ pihole_volume }}/pihole.env"
        networks:
          - name: pihole_unbound_net
        volumes:
          - "{{ pihole_volume }}:/etc/pihole"
          - "{{ dnsmasq_volume }}:/etc/dnsmasq.d"

    - name: Adjust rate-limiting in Pi-hole
      lineinfile:
        path: "{{ pihole_volume }}/pihole-FTL.conf"
        line: "RATE_LIMIT={{ rate_limit }}"
        create: yes
        state: present

    - name: Increase dns-forward-max in Pi-hole
      lineinfile:
        path: "{{ dnsmasq_volume }}/99-dnsmasq.conf"
        line: "dns-forward-max={{ dns_forward_max }}"
        create: yes
        state: present

    - name: Configure EDNS buffer size
      lineinfile:
        path: "{{ dnsmasq_volume }}/99-edns.conf"
        line: "edns-packet-max=1232"
        create: yes
        state: present

    - name: Clear custom DNS records
      command: 'docker exec {{ pihole_container_name }} bash -c "echo > /etc/pihole/custom.list"'
      changed_when: true

    - name: Add custom DNS records for Pi-hole
      shell: |
        echo "{{ item.ip }} {{ item.name }}" >> /etc/pihole/custom.list
      args:
        executable: /bin/bash
      loop: "{{ local_dns_records }}"
      register: dns_addition

    - name: Add custom blacklist to Pi-hole
      command: >
        docker exec {{ pihole_container_name }}
        pihole -a adlist add {{ stevenblack_hosts_url }}
      changed_when: false

    - name: Update Pi-hole Gravity
      command: docker exec {{ pihole_container_name }} pihole -g
      changed_when: false

  handlers:
    - name: Restart Pi-hole
      community.docker.docker_container:
        name: "{{ pihole_container_name }}"
        state: started
        restart: true
