---
- name: Install WireGuard and WireGuard UI on Link
  hosts: link
  become: true
  vars_files:
    - homelab_vault.yml  # Make sure this path matches your actual vault file location

  tasks:
    - name: Ensure UFW is installed
      ansible.builtin.package:
        name: ufw
        state: present

    - name: Install WireGuard
      ansible.builtin.package:
        name: wireguard
        state: present

    - name: Install Docker
      ansible.builtin.package:
        name: docker.io
        state: latest

    - name: Ensure Docker Service is running
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Install Docker Compose using apt
      ansible.builtin.package:
        name: docker-compose
        state: latest
      when: ansible_facts['os_family'] == "Debian"

    - name: Remove existing WireGuard UI container
      ansible.builtin.docker_container:
          name: wireguard-ui
          state: absent
      ignore_errors: true

    - name: Deploy WireGuard UI using shell command for capabilities and restart policy
      ansible.builtin.shell: |
        docker container rm -f wireguard-ui || true
        docker run -d --name wireguard-ui --cap-add=NET_ADMIN --restart unless-stopped -p 51822:5000 -v /etc/wireguard:/etc/wireguard \
        -e WGUI_USERNAME="mahdi" \
        -e WGUI_PASSWORD="{{ wg_ui_password }}" \
        -e WGUI_SERVER_INTERFACE_ADDRESSES="10.252.1.0/24" \
        -e WGUI_SERVER_LISTEN_PORT="51821" \
        -e WGUI_FIREWALL_MARK="0xca6c" \
        -e WGUI_ENDPOINT_ADDRESS="morningcoffee.ddns.net:51821" \
        -e WGUI_DEFAULT_CLIENT_ALLOWED_IPS="0.0.0.0/0, ::0/0" \
        -e WGUI_MANAGE_RESTART="true" \
        -e WGUI_MANAGE_START="true" \
        ngoduykhanh/wireguard-ui:latest
      args:
        executable: /bin/bash
 
    - name: Open ports for WireGuard and WireGuard UI
      ansible.builtin.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      loop:
        - { port: 51821, proto: udp }  # WireGuard typically uses UDP
        - { port: 51822, proto: tcp }  # WireGuard UI uses TCP for web interface access

    - name: Allow forwarded traffic from WireGuard clients
      ansible.builtin.iptables:
        chain: FORWARD
        in_interface: wg0
        source: 10.252.1.0/24
        jump: ACCEPT

    - name: Allow forwarded traffic to WireGuard clients (related, established)
      ansible.builtin.iptables:
        table: filter
        chain: FORWARD
        out_interface: wg0
        destination: 10.252.1.0/24
        match: conntrack
        ctstate: RELATED,ESTABLISHED
        jump: ACCEPT
        state: present

    - name: Install iptables-persistent
      ansible.builtin.package:
        name: iptables-persistent
        state: present

    - name: Save iptables rules
      ansible.builtin.command:
        cmd: "/bin/sh -c 'iptables-save > /etc/iptables/rules.v4'"
      args:
        creates: /etc/iptables/rules.v4


  handlers:
  - name: Restart WireGuard UI
    ansible.builtin.docker_container:
      name: wireguard-ui
      state: restarted

- name: Ensure user has Docker daemon access
  hosts: link
  become: true
  tasks:
    - name: Add user to docker group
      ansible.builtin.user:
        name: mahdi
        groups: docker
        append: yes
      notify: Restart Docker Service

    - name: Restart Docker Service
      ansible.builtin.service:
        name: docker
        state: restarted

